{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAoBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3BbL,EAAOY,iBAAiB,UAAWC,IACjCA,EAAIC,iBAEJ,MAAMC,EAAaC,SAAShB,EAAOiB,SAASZ,MAAMa,OAC5CC,EAAYH,SAAShB,EAAOiB,SAASG,KAAKF,OAC1CG,EAAcL,SAAShB,EAAOiB,SAASK,OAAOJ,OAEpD,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAAG,CAEvBpB,EADQoB,EAAI,EACmBR,EAAaI,EAAYI,GAChEC,MAAMC,IACZ3B,EAAA4B,OAAOC,QAAQ,uBAAqBF,EAAIrB,eAAoBqB,EAAEpB,UAAe,IAC5EuB,OAAOH,IACR3B,EAAA4B,OAAOG,QAAQ,sBAAoBJ,EAAErB,eAAoBqB,EAAEpB,UAAe,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(`.form`);\n\nformEl.addEventListener(`submit`, (evn) => {\n  evn.preventDefault();\n\n  const delayValue = parseInt(formEl.elements.delay.value);\n  const stepValue = parseInt(formEl.elements.step.value);\n  const amountValue = parseInt(formEl.elements.amount.value);\n\n  for (let i = 0; i < amountValue; i += 1) {\n    const positionPromise = i + 1;\n    const promise = createPromise(positionPromise, delayValue + stepValue * i);\n    promise.then((result) => {\n      Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    }).catch((result) => {\n      Notify.failure(`❌ Rejected promise ${result.position} in ${result.delay}ms`);\n    });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evn","preventDefault","delayValue","parseInt","elements","value","stepValue","step","amountValue","amount","i","then","result","Notify","success","catch","failure"],"version":3,"file":"03-promises.8f7dd7ca.js.map"}